{"version":3,"sources":["components/Converter/Converter.module.css","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Converter/Converter.jsx","components/Converter/ConverterContainer.jsx"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","Converter","props","useState","setValue","hello","setHello","isFetching","converter","useEffect","fetchingMessage","somethingWrongMessage","result","outputValue","toFixed","className","style","Main","inputSection","autoFocus","onKeyPress","event","key","base","slice","toUpperCase","interest","requiredValue","parseFloat","getConvert","sendDataToConvert","onChange","e","currentTarget","type","outputSection","name","connect","state","converterPage","dispatch","getConvertTC"],"mappings":"8EACAA,EAAOC,QAAU,CAAC,KAAO,wBAAwB,aAAe,gCAAgC,cAAgB,mC,mDCGjG,SAASC,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,G,mCI4DvFC,EA7DG,SAACC,GAEf,QAA0BC,oBAAS,GAAnC,GAAOP,EAAP,KAAcQ,EAAd,KACA,IAA0BD,mBAAS,iCAAnC,GAAOE,EAAP,KAAcC,EAAd,KACMC,EAAaL,EAAMM,UAAUD,WAEnCE,qBAAU,WACNH,EAAS,mCACV,IAEH,IAkBMI,EAAkBH,GAAc,uBAChCI,QAAoDrB,IAA3BY,EAAMM,UAAUI,QAAmD,OAA3BV,EAAMM,UAAUI,SAAoB,4BACvGC,IAAiBX,EAAMM,UAAUI,QAAWV,EAAMM,UAAUI,OAAOE,QAAQ,GAE/E,OACI,sBAAKC,UAAWC,IAAMC,KAAtB,UACI,oBAAIF,UAAU,iBAAd,gCACA,sBAAKA,UAAWC,IAAME,aAAtB,UACI,4FAA8D,2CAC1D,uBADJ,YAEa,sDAEb,8BACI,uBAAOC,WAAW,EACdC,WAzBC,SAACC,GACA,UAAdA,EAAMC,MACNhB,EAAS,IATS,SAACV,GACvB,IAAM2B,EAAO3B,EAAM4B,OAAO,IAAK,GAAGC,cAC5BC,EAAW9B,EAAM4B,OAAO,GAAGC,cAC3BE,EAAgBC,WAAWhC,GACjCM,EAAM2B,WAAWN,EAAMG,EAAUC,GAM7BG,CAAkBlC,KAuBNmC,SAnBE,SAACC,GACnB5B,EAAS4B,EAAEC,cAAcrC,QAmBTsC,KAAK,cAIjB,sBAAKnB,UAAWC,IAAMmB,cAAtB,UACI,uCACA,yBAAQC,KAAK,SAAb,YACO1B,GAAmBC,GAAyBE,IAAgBR,EAC9DK,GACCA,GAAmBC,IAClBD,GAAmBC,IAA0BE,Y,gBCxCrDwB,uBAdS,SAACC,GACrB,MAAO,CACH9B,UAAW8B,EAAMC,kBAIE,SAACC,GACxB,MAAO,CACHX,WAAY,SAACN,EAAMG,EAAU9B,GACzB4C,EAASC,YAAalB,EAAMG,EAAU9B,QAKnCyC,CAA6CpC","file":"static/js/3.5d9f45df.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Converter_Main__bNnNg\",\"inputSection\":\"Converter_inputSection__3ELeq\",\"outputSection\":\"Converter_outputSection__ZGYlL\"};","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import style from \"./Converter.module.css\";\nimport React, { useState, useEffect } from \"react\";\n\n// base, interest, value\nconst Converter = (props) => {\n    // console.log('Render Converter')\n    const [value, setValue] = useState(false)\n    const [hello, setHello] = useState('Hello, write and send request')\n    const isFetching = props.converter.isFetching\n\n    useEffect(() => {\n        setHello('Hello, write and send request')\n    }, [])\n\n    const sendDataToConvert = (value) => {\n        const base = value.slice(-10, -7).toUpperCase()\n        const interest = value.slice(-3).toUpperCase()\n        const requiredValue = parseFloat(value)\n        props.getConvert(base, interest, requiredValue)\n    }\n\n    const onEnterPress = (event) => {\n        if (event.key === 'Enter') {\n            setHello('')\n            sendDataToConvert(value)\n        }\n    }\n\n    const onValueChange = (e) => {\n        setValue(e.currentTarget.value);\n    }\n\n    const fetchingMessage = isFetching && 'loading, please wait'\n    const somethingWrongMessage = (props.converter.result === undefined || props.converter.result === null) && 'Error, respect the format'\n    let outputValue = !!(props.converter.result) && props.converter.result.toFixed(3)\n    \n    return (\n        <div className={style.Main}>\n            <h2 className=\"visuallyHidden\">Currency converter</h2>\n            <div className={style.inputSection}>\n                <p>Enter data on field below in the required format and press <strong>Enter</strong>\n                    <br />\n                    Example: <strong>15 usd in rub</strong>\n                </p>\n                <div>\n                    <input autoFocus={true}\n                        onKeyPress={onEnterPress}\n                        onChange={onValueChange}\n                        type=\"text\" />\n                </div>\n            </div>\n\n            <div className={style.outputSection}>\n                <p>result</p>\n                <output name=\"result\">\n                    {!(fetchingMessage || somethingWrongMessage || outputValue) && hello}\n                    {fetchingMessage}\n                    {!fetchingMessage && somethingWrongMessage}\n                    {!(fetchingMessage || somethingWrongMessage) && outputValue}\n                </output>\n            </div>\n        </div>\n    )\n}\n\nexport default Converter;","import Converter from \"./Converter\";\nimport { connect } from \"react-redux\";\nimport { getConvertTC } from \"../../redux/converterReducer\";\n\nconst mapStateToProps = (state) => {\n    return {\n        converter: state.converterPage,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getConvert: (base, interest, value) => {\n            dispatch(getConvertTC(base, interest, value))\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Converter)\n"],"sourceRoot":""}