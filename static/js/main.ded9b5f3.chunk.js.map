{"version":3,"sources":["components/Header/Header.module.css","api/api.js","components/Exchange/Exchange.module.css","redux/converterReducer.js","components/Loader/Loader.module.css","components/Header/Header.jsx","components/Exchange/Exchange.jsx","redux/exchangeReducer.js","components/Exchange/ExchangeContainer.jsx","components/Loader/Loader.jsx","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["module","exports","instance","axios","baseURL","currencyAPI","getArrRates","baseArr","symbols","map","result","get","then","response","data","convert","base","interest","value","console","log","rates","CURRENCY_CONVERT","CURRENCY_CONVERT_STATE","initialState","isFetching","getConvertTC","dispatch","type","getConvertStateAC","converterReducer","state","action","Header","className","style","ul","link","to","activeClassName","active","Exchange","props","baseApp","userLang","navigator","language","userLanguage","slice","toLowerCase","interests","exchange","filter","el","useEffect","setActualRates","table","actualRates","i","actualBaseApp","Main","baseCurrency","ADD_BASE_CURRENCY","ADD_ACTUAL_RATES","setActualRatesTC","exchangeReducer","connect","exchangePage","Loader","loader","cx","cy","r","stroke","strokeDasharray","strokeWidth","fill","App","Converter","lazy","from","render","ExchangeContainer","exact","path","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","converterPage","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ded9b5f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"Header_ul__1n8SE\",\"link\":\"Header_link__2sJUu\",\"active\":\"Header_active__3NCl_\"};","import * as axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: 'https://api.exchangerate.host/latest'\n})\n\nexport const currencyAPI = {\n    \n    getArrRates(baseArr, symbols) {\n        return axios.all(baseArr.map(result => {\n            return instance.get(\"?base=\" + result + \"&symbols=\" + symbols)\n                .then(response => {\n                    return response.data\n                })\n        }))\n    },\n\n    convert(base, interest, value) {\n        return instance.get(\"?base=\" + base + \"&symbols=\" + interest + \"&amount=\" + value)\n            .then(response => {\n                console.log(response.data.rates[interest])\n                return response.data.rates[interest]\n            })\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Exchange_Main__PMXev\",\"baseCurrency\":\"Exchange_baseCurrency__1oVfV\",\"link\":\"Exchange_link__1OYu9\"};","import { currencyAPI } from \"../api/api\";\n\nconst CURRENCY_CONVERT = 'C/SRC/REDUX/CONVERT_REDUCER/CURRENCY_CONVERT';\nconst CURRENCY_CONVERT_STATE = 'C/SRC/REDUX/CONVERT_REDUCER/CURRENCY_CONVERT_STATE'\n\nlet initialState = {\n    base: '',\n    interest: '',\n    result: 0,\n    isFetching: false\n}\n\nconst converterReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case CURRENCY_CONVERT_STATE: {\n            return {\n                ...state,\n                base: action.base,\n                interest: action.interest,\n                isFetching: true\n            }\n        }\n        case CURRENCY_CONVERT: {\n            return {\n                ...state,\n                result: action.result,\n                isFetching: false\n            }\n        }\n        default:\n            return state;\n    }\n}\n\nexport const getConvertAC = (result) => ({ type: CURRENCY_CONVERT, result });\nexport const getConvertStateAC = (base, interest) => ({ type: CURRENCY_CONVERT_STATE, base, interest });\n\nexport const getConvertTC = (base, interest, value) => {\n    return (dispatch) => {\n        dispatch(getConvertStateAC(base, interest))\n        currencyAPI.convert(base, interest, value).then(response => {\n            dispatch(getConvertAC(response))\n        })\n    }\n}\n\n\nexport default converterReducer;\n\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__3fqdQ\",\"rotate\":\"Loader_rotate__3EhD9\"};","import style from \"./Header.module.css\"\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <nav>\r\n                <ul className={style.ul}>\r\n                    <li><NavLink className={style.link} to=\"/exchange\" activeClassName={style.active}>Exchange\r\n                        rates</NavLink></li>\r\n                    <li><NavLink className={style.link} to=\"/converter\"\r\n                        activeClassName={style.active}>Currency converter</NavLink></li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n\r\n    )\r\n}\r\n\r\nexport default Header;","import style from \"../Exchange/Exchange.module.css\";\nimport { useEffect } from \"react\";\n\nconst Exchange = (props) => {\n\n    let userLang = navigator.language || navigator.userLanguage;\n    userLang = userLang.slice(0, 2).toLowerCase();\n    \n    let baseApp\n\n    switch (userLang) {\n        case 'ru':\n            baseApp = \"RUB\";\n            break;\n\n        case 'en':\n            baseApp = \"USD\"\n            break;\n\n        case 'de':\n        case 'cs':\n        case 'fr':\n        case 'it':\n            baseApp = \"EUR\"\n            break;\n        default:\n            baseApp = \"USD\"\n    }\n\n    const interests = props.exchange.interests.filter(el => el !== baseApp)\n\n    useEffect(() => {\n        // console.log('send request')\n        props.setActualRates(interests, baseApp);\n        // eslint-disable-next-line\n    }, [baseApp])\n\n\n    const table = props.exchange.actualRates.map((el, i) => {\n        const actualBaseApp = props.exchange.baseApp\n        return <tr key={i}><td>1 {el.base}</td><td>{el.rates[actualBaseApp]}</td></tr>\n    })\n\n    // console.log('rerender')\n\n    return (\n        <div className={style.Main}>\n            <h2 className=\"visuallyHidden\">Exchange rates</h2>\n            <div className={style.baseCurrency}>\n                <p>Your base currency: {props.exchange.baseApp}</p>\n            </div>\n            <table>\n                <tbody>\n                    <tr><th>From</th><th>To</th></tr>\n                    {table}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default Exchange;","import { currencyAPI } from \"../api/api\";\r\n\r\nconst ADD_BASE_CURRENCY = 'C/SRC/REDUX/EXCHANGE_REDUCER/ADD_BASE_CURRENCY';\r\nconst ADD_ACTUAL_RATES = 'C/SRC/REDUX/EXCHANGE_REDUCER/ADD_ACTUAL_RATES'\r\n\r\nlet initialState = {\r\n    baseApp: 'USD',\r\n    interests: ['USD', 'EUR', 'RUB'],\r\n    actualRates: [],\r\n    isFetching: false\r\n}\r\n\r\nconst exchangeReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_BASE_CURRENCY: {\r\n            return {\r\n                ...state,\r\n                baseApp: action.base\r\n            }\r\n        }\r\n        case ADD_ACTUAL_RATES: {\r\n            return {\r\n                ...state,\r\n                actualRates: [...action.actualRates]\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setBaseAC = (base) => ({ type: ADD_BASE_CURRENCY, base });\r\nexport const getActualRatesAC = (actualRates) => ({ type: ADD_ACTUAL_RATES, actualRates });\r\n\r\n\r\nexport const setActualRatesTC = (interests, baseApp) => {\r\n    return (dispatch) => {\r\n        dispatch(setBaseAC(baseApp))\r\n        currencyAPI.getArrRates(interests, baseApp).then(response => {\r\n            dispatch(getActualRatesAC(response))\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport default exchangeReducer;\r\n\r\n\r\n","import Exchange from \"./Exchange\";\nimport { connect } from \"react-redux\";\nimport { setActualRatesTC } from \"../../redux/exchangeReducer\";\n\nconst mapStateToProps = (state) => {\n    return {\n        exchange: state.exchangePage,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setActualRates: (interests, baseApp) => {\n            dispatch(setActualRatesTC(interests, baseApp))\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Exchange)\n","import style from \"./Loader.module.css\";\n\nconst Loader = () => {\n    return (\n        <div className={style.loader}>\n            <svg>\n                <circle cx=\"50\" cy=\"50\" r=\"40\" stroke=\"gold\" strokeDasharray=\"78.5 235.5\" strokeWidth=\"3\"\n                    fill=\"none\" />\n                <circle cx=\"50\" cy=\"50\" r=\"30\" stroke=\"white\" strokeDasharray=\"62.8 188.8\" strokeWidth=\"3\"\n                    fill=\"none\" />\n                <circle cx=\"50\" cy=\"50\" r=\"20\" stroke=\"gold\" strokeDasharray=\"47.1 141.3\" strokeWidth=\"3\"\n                    fill=\"none\" />\n            </svg>\n        </div>\n    )\n}\n\nexport default Loader;","import React, { lazy, Suspense } from \"react\";\nimport './App.css';\nimport { Redirect, Route } from \"react-router-dom\";\nimport Header from \"./components/Header/Header\";\nimport ExchangeContainer from \"./components/Exchange/ExchangeContainer\";\nimport Loader from \"./components/Loader/Loader\";\n\n\nfunction App() {\n\n    const Exchange = () => <ExchangeContainer />\n    const Converter = lazy(() => import('./components/Converter/ConverterContainer'))\n\n    return (\n        <div className=\"App\">\n            <div className=\"appWrapper\">\n                <Header />\n                <Redirect from=\"/\" to=\"/exchange\" />\n                <Route render={Exchange} exact path=\"/exchange\" />\n                <Route exact path=\"/converter\">\n                    <Suspense fallback={<Loader/>}>\n                        <Converter />\n                    </Suspense>\n                </Route>\n                \n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport exchangeReducer from \"./exchangeReducer\";\r\nimport converterReducer from \"./converterReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    exchangePage: exchangeReducer,\r\n    converterPage: converterReducer\r\n}\r\n)\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunk))\r\n\r\nexport default store;","import React from 'react';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./redux/store\"\nimport ReactDOM from \"react-dom\";\n// import {BrowserRouter} from \"react-router-dom\"; //HashRouter work with local\nimport {HashRouter} from \"react-router-dom\"; //HashRouter work with local\n\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}